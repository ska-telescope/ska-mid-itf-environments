variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - verify-test-equipment
  - test-equipment-setup

# ################################################
# # Test Equipment Jobs
# ################################################
.test-equipment-env:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test-equipment-setup
  variables:
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    K8S_CHART: ska-mid-itf
    KUBE_NAMESPACE: test-equipment
    SERVICE_ACCOUNT: ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-test-eq
    NEXUS_CACHE: NEXUS_CACHE
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  tags:
    - ska-k8srunner-za-itf

deploy-test-equipment:
  variables:
    KUBE_APP: ska-ser-test-equipment
    MINIKUBE: "false"
  extends: .test-equipment-env
  before_script:
    - bash .make/resources/gitlab_section.sh upgrade_poetry "Upgrade Poetry" pip install --upgrade poetry
  script:
    - make itf-te-template
    - make k8s-install-chart
    # The following are all needed to verify deployment and expose the issue
    - make k8s-wait SKA_TANGO_OPERATOR=true
    - kubectl logs -l job-name=signalgenerator-test-config -n $KUBE_NAMESPACE
    - make k8s-get-pods
    - make itf-links
  environment:
    name: ska-mid-itf/test-equipment
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta
    on_stop: remove-test-equipment
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - build/
    reports:
      junit:
        - build/report.xml
  needs:
    - remove-test-equipment
  allow_failure: true # need to keep this to unlock the pipeline

remove-test-equipment:
  extends:
    - .test-equipment-env
    - .uninstall-chart
  after_script: make itf-spookd-uninstall
  environment:
    name: ska-mid-itf/test-equipment
    kubernetes:
      # This repetition is needed for gitlab to parse the namespace correctly
      namespace: $KUBE_NAMESPACE
    url: "https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta"
    action: stop
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: true # need to keep this to unlock the pipeline

generate-skysimctl-config:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: test-equipment-setup
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
  tags:
    - ska-k8srunner-za-itf
  script: make itf-te-pass-env
  artifacts:
    reports:
      dotenv: build/deploy.env
    untracked: false
    when: on_success
    paths:
      - build/
  needs:
    - deploy-test-equipment

deploy-skysimctl-install:
  stage: test-equipment-setup
  trigger:
    project: ska-telescope/ska-te-mid-skysimctl
    branch: main
  inherit:
    variables: false
  needs:
    - generate-skysimctl-config
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH

.deploy-test-equipment-for-verification:
  tags:
    - ska-k8srunner-za-itf
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: verify-test-equipment
  variables:
    MINIKUBE: "false"
    CLUSTER_DOMAIN: miditf.internal.skao.int
    INGRESS_HOST: k8s.miditf.internal.skao.int
    KUBE_APP: ska-ser-test-equipment
    K8S_CHART: test-equipment-verification
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    SERVICE_ACCOUNT: ci-svc-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG-test-eq
    NEXUS_CACHE: NEXUS_CACHE
  before_script:
    - make k8s-uninstall-chart
    - make k8s-delete-namespace
    - bash .make/resources/gitlab_section.sh creds "Create K8s Credentials" make itf-cluster-credentials
  script:
    - make k8s-install-chart
    - make itf-links
    - make k8s-wait || true
  after_script:
    - bash .make/resources/gitlab_section.sh deployment-config "Output deployment config information" make get-deployment-config-info
  environment:
    name: ska-mid-itf/te-verification
    kubernetes:
      namespace: "$KUBE_NAMESPACE"
    url: https://$INGRESS_HOST/$KUBE_NAMESPACE/taranta
  allow_failure: true # need to keep this to unlock the pipeline
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - build/
  rules:
    - changes:
        - charts/test-equipment-verification/*
        - resources/makefiles/test-equipment-dev.mk
      if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never

.uninstall-chart:
  script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - bash .make/resources/gitlab_section.sh env "Environment dump" env
    - make k8s-uninstall-chart || true
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all --ignore-not-found
    - make k8s-delete-namespace

